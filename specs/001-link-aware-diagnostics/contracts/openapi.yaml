openapi: 3.1.0
info:
  title: Link-Aware Diagnostics Service
  version: 0.1.0
  description: >-
    REST surface exposed by the link-aware diagnostics server for optional headless workflows
    (CI validation, integrations). VS Code extension communicates via LSP commands that map to
    these operations.
servers:
  - url: http://localhost:43111
    description: Local development server
paths:
  /artifacts/register:
    post:
      summary: Register or update a knowledge artifact
      operationId: registerArtifact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactInput'
      responses:
        '200':
          description: Artifact registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
  /links:
    post:
      summary: Create or update a link relationship
      operationId: upsertLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkInput'
      responses:
        '200':
          description: Link created or updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
    get:
      summary: List link relationships with optional filters
      operationId: listLinks
      parameters:
        - in: query
          name: sourceId
          schema:
            type: string
            format: uuid
        - in: query
          name: targetId
          schema:
            type: string
            format: uuid
        - in: query
          name: kind
          schema:
            $ref: '#/components/schemas/LinkKind'
      responses:
        '200':
          description: Matching links
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Link'
  /diagnostics:
    get:
      summary: Retrieve outstanding diagnostics grouped by artifact
      operationId: listDiagnostics
      parameters:
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/DiagnosticStatus'
        - in: query
          name: layer
          schema:
            $ref: '#/components/schemas/ArtifactType'
      responses:
        '200':
          description: Active diagnostics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Diagnostic'
  /diagnostics/{id}/acknowledge:
    post:
      summary: Mark a diagnostic as acknowledged
      operationId: acknowledgeDiagnostic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgementInput'
      responses:
        '200':
          description: Diagnostic acknowledged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostic'
  /diagnostics/{id}/dismiss:
    post:
      summary: Suppress a diagnostic
      operationId: dismissDiagnostic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissInput'
      responses:
        '200':
          description: Diagnostic suppressed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostic'
  /llm/evaluate:
    post:
      summary: Request optional LLM assessment for a diagnostic cluster
      operationId: evaluateWithLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LLMEvaluationInput'
      responses:
        '202':
          description: Assessment accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMEvaluationTicket'
components:
  schemas:
    ArtifactType:
      type: string
      enum: [vision, requirements, architecture, implementation, code]
    Artifact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        uri:
          type: string
        type:
          $ref: '#/components/schemas/ArtifactType'
        language:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        lastSynchronizedAt:
          type: string
          format: date-time
          nullable: true
        metadata:
          type: object
          additionalProperties: true
    ArtifactInput:
      type: object
      required: [uri, type]
      properties:
        uri:
          type: string
        type:
          $ref: '#/components/schemas/ArtifactType'
        language:
          type: string
        owner:
          type: string
        metadata:
          type: object
          additionalProperties: true
    LinkKind:
      type: string
      enum: [documents, implements, depends_on, references]
    Link:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sourceId:
          type: string
          format: uuid
        targetId:
          type: string
          format: uuid
        kind:
          $ref: '#/components/schemas/LinkKind'
        confidence:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
    LinkInput:
      type: object
      required: [sourceId, targetId, kind]
      properties:
        sourceId:
          type: string
          format: uuid
        targetId:
          type: string
          format: uuid
        kind:
          $ref: '#/components/schemas/LinkKind'
        confidence:
          type: number
          format: float
          default: 1
        createdBy:
          type: string
    DiagnosticStatus:
      type: string
      enum: [active, acknowledged, suppressed]
    Diagnostic:
      type: object
      properties:
        id:
          type: string
          format: uuid
        artifactId:
          type: string
          format: uuid
        triggerArtifactId:
          type: string
          format: uuid
        message:
          type: string
        severity:
          type: string
          enum: [warning, info, hint]
        status:
          $ref: '#/components/schemas/DiagnosticStatus'
        createdAt:
          type: string
          format: date-time
        acknowledgedAt:
          type: string
          format: date-time
          nullable: true
        acknowledgedBy:
          type: string
          nullable: true
        linkIds:
          type: array
          items:
            type: string
            format: uuid
        llmAssessment:
          $ref: '#/components/schemas/LLMAssessment'
          nullable: true
    AcknowledgementInput:
      type: object
      required: [actor]
      properties:
        actor:
          type: string
        notes:
          type: string
          nullable: true
    DismissInput:
      type: object
      required: [actor, reason]
      properties:
        actor:
          type: string
        reason:
          type: string
        expiresAt:
          type: string
          format: date-time
          nullable: true
    LLMEvaluationInput:
      type: object
      required: [diagnosticIds]
      properties:
        diagnosticIds:
          type: array
          items:
            type: string
            format: uuid
        promptContext:
          type: string
          nullable: true
    LLMEvaluationTicket:
      type: object
      properties:
        ticketId:
          type: string
        status:
          type: string
          enum: [queued, running, complete]
        estimatedCompletionSeconds:
          type: integer
          nullable: true
    LLMAssessment:
      type: object
      properties:
        summary:
          type: string
        confidence:
          type: number
          format: float
        recommendedActions:
          type: array
          items:
            type: string
